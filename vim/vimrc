call plug#begin('~/.vim/plugged')

Plug 'tomasr/molokai'

"Plug 'scrooloose/nerdtree'
"Plug 'kien/ctrlp.vim'
"Plug 'rking/ag.vim'
"Plug 'bling/vim-airline'

Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'

Plug 'Shougo/neomru.vim'
Plug 'Shougo/vimproc.vim'
Plug 'Shougo/unite.vim'

Plug 'terryma/vim-multiple-cursors'

Plug 'tpope/vim-fugitive'
Plug 'Valloric/YouCompleteMe'
Plug 'ervandew/supertab'
Plug 'christoomey/vim-tmux-navigator'
Plug 'scrooloose/syntastic'

Plug 'tpope/vim-rails'
Plug 'vim-ruby/vim-ruby'
Plug 'tpope/vim-bundler'
Plug 'thoughtbot/vim-rspec'

Plug 'slim-template/vim-slim'
Plug 'kchmck/vim-coffee-script'

call plug#end()

colorscheme molokai

set relativenumber
set number

set undofile
set undodir=~/.vim/undodir//
set history=1000
set backupdir=~/.vim/backupdir//
set directory=~/.vim/swapfiles//

set autoindent
set ts=2
set shiftwidth=2
set expandtab
set showmatch
set ignorecase
set smartcase
set hlsearch
set incsearch

set wildmenu
set wildmode=list:longest,full

set list listchars=tab:-·,trail:·
set laststatus=2
set scrolljump=5
set backspace=indent,eol,start
set linebreak

set scrolloff=8
set sidescrolloff=15
set sidescroll=1

set encoding=utf-8
set fileencoding=utf-8

set timeout
set timeoutlen=750
set ttimeoutlen=250

highlight ExtraWhitespace ctermbg=1 guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

hi MatchParen ctermbg=0
hi MatchParen ctermfg=Red

" Map leader key to space
noremap <Space> <NOP>
let mapleader = " "

" Change tab
map ö :tabp <Enter>
map ä :tabn <Enter>

" Switch lines
map Ö :m .+1<CR>==
map Ä :m .-2<CR>==

" Move wrapped lines
nnoremap k gk
nnoremap j gj

" Disable Shift-k
nnoremap K <NOP>

" CTRL+Arrows to resize splits
nnoremap <C-left> :vertical resize -5<cr>
nnoremap <C-down> :resize +5<cr>
nnoremap <C-up> :resize -5<cr>
nnoremap <C-right> :vertical resize +5<cr>

" F4 to remove trailing whitespace
nnoremap <silent> <F4> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

command WQ wq
command Wq wq
command W w
command Q q

" Go to tag under cursor
noremap <leader>g <C-]>
" Show tags available for word under cursor
noremap <leader>f g]

" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<leader><tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

" Rspec
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

"Unite
call unite#filters#matcher_default#use(['matcher_fuzzy'])
call unite#filters#sorter_default#use(['sorter_rank'])

nnoremap <leader>/ :Unite grep:.<cr>
let g:unite_source_history_yank_enable = 1
nnoremap <leader>y :Unite history/yank<cr>
nnoremap <leader>s :Unite -quick-match buffer<cr>

let g:unite_data_directory='~/.vim/.cache/unite'
let g:unite_enable_start_insert=1
let g:unite_source_history_yank_enable=1
let g:unite_prompt='» '
let g:unite_split_rule = 'botright'

if executable('ag')
    let g:unite_source_rec_async_command = 'ag --nocolor --nogroup --hidden -g ""'
    let g:unite_source_grep_command = 'ag'
    let g:unite_source_grep_default_opts = '--nocolor --nogroup --hidden'
    let g:unite_source_grep_recursive_opt=''
endif
nnoremap <silent> <c-p> :Unite -auto-resize file file_mru file_rec<cr>
