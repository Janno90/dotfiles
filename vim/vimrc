call plug#begin('~/.vim/plugged')

"Plug 'tpope/vim-sensible'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-fugitive'

"Plug 'ludovicchabant/vim-gutentags'

Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }

Plug 'morhetz/gruvbox'

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

Plug 'airblade/vim-gitgutter'
Plug 'christoomey/vim-tmux-navigator'

Plug 'benekastah/neomake'
"Plug 'w0rp/ale'

" Autocomplete
Plug 'zchee/deoplete-go', { 'do': 'make && make gen_json' }
Plug 'carlitux/deoplete-ternjs', { 'do': 'npm install -g tern' }
"Plug 'mhartington/deoplete-typescript', { 'commit': '6bf87ea239274a3c46c5a10b9a91e83a57ee7847' }
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
"Plug 'slashmili/alchemist.vim'
Plug 'fatih/vim-go'

" Syntax highlighting
"Plug 'leafgarland/typescript-vim', { 'for': 'typescript' }
Plug 'mfukar/robotframework-vim'
Plug 'pangloss/vim-javascript', { 'for': 'javascript' }
Plug 'othree/javascript-libraries-syntax.vim', { 'for': 'javascript' }
"Plug 'elixir-lang/vim-elixir'
Plug 'mxw/vim-jsx'

Plug 'Shougo/neosnippet'
Plug 'Shougo/neosnippet-snippets'

call plug#end()

" Colorscheme
set background=dark
colorscheme gruvbox

" Map leader key to space
noremap <Space> <NOP>
let mapleader = " "

" Gitgutter
let g:gitgutter_realtime = 0
let g:gitgutter_eager = 0

" Neomake
autocmd! BufWritePost * Neomake

" CTRL+Arrows to resize splits
nnoremap <C-left> :vertical resize -5<cr>
nnoremap <C-down> :resize +5<cr>
nnoremap <C-up> :resize -5<cr>
nnoremap <C-right> :vertical resize +5<cr>

" Typos
command WQ wq
command Wq wq
command W w
command Q q
nnoremap K <NOP>

" Undo & history & swp files
set undofile
set undodir=~/.vim/undodir//
set history=1000
set backupdir=~/.vim/backupdir//
set directory=~/.vim/swapfiles//

" Show column 80
set colorcolumn=80

" Buffer buffer
set hidden
nnoremap ä :bnext<CR>
nnoremap ö :bprev<CR>
"map <C-c> :bd<cr>
nnoremap <C-c> :bp\|bd #<CR>

" Deoplete
let g:deoplete#enable_at_startup = 1
autocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif
let g:deoplete#sources#go#use_cache = 1
let g:deoplete#sources#go#json_directory='~/.vim/plugged/deoplete-go/data/json/1.7.4/linux_amd64'
let g:deoplete#sources#go#gocode_binary=$GOPATH.'/bin/gocode'
set completeopt+=noselect

" FZF
nnoremap <C-p> :Files<CR>
map <Leader>b :Buffers<CR>
map <Leader>s :GFiles?<CR>
map <Leader>c :Commits<CR>
map gs :Gstatus<CR>
map gc :Gcommit<CR>

" Linenumbers
set relativenumber
set number

" Encodings
set encoding=utf-8
set fileencoding=utf-8

" Timeouts
set timeoutlen=1000
set ttimeoutlen=0

" Search
set hlsearch
set incsearch
set ignorecase
set smartcase

" Matching bracket
set showmatch

" Error Sounds
set noerrorbells
set novisualbell

" Scroll
set scrolloff=8
set sidescrolloff=15
set lazyredraw

" Wildmenu
set wildmode=longest,list,full
set wildmenu

set list listchars=tab:>-,trail:~,extends:>,precedes:<,nbsp:+
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/

" Tags
noremap <leader>g <C-]>
noremap <leader>f g]

set ts=2
set shiftwidth=2
set expandtab
set nostartofline

" From terminal mode to normal mode with esc
"tnoremap <ESC> <C-\><C-n>

if filereadable(".eslintrc*") || filereadable(".eslintrc.json")
  let g:neomake_javascript_enabled_makers = ['eslint']
  let g:neomake_jsx_enabled_makers = ['eslint']
else
  let g:neomake_javascript_enabled_makers = ['jshint']
  let g:neomake_jsx_enabled_makers = ['jshint']
endif

let g:jsx_ext_required = 0

let $NVIM_TUI_ENABLE_CURSOR_SHAPE = 0

imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

let g:neosnippet#snippets_directory='~/.vim/snippets'
