call plug#begin('~/.vim/plugged')

Plug 'tomasr/molokai'

Plug 'scrooloose/nerdtree'
Plug 'kien/ctrlp.vim'
Plug 'rking/ag.vim'
Plug 'bling/vim-airline'
Plug 'Valloric/YouCompleteMe'

Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

Plug 'xolox/vim-misc'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'

Plug 'tpope/vim-fugitive'
Plug 'christoomey/vim-tmux-navigator'
Plug 'scrooloose/syntastic'
Plug 'bronson/vim-trailing-whitespace'

Plug 'tpope/vim-rails'
Plug 'vim-ruby/vim-ruby'
Plug 'tpope/vim-bundler'
Plug 'thoughtbot/vim-rspec'

Plug 'slim-template/vim-slim'
Plug 'kchmck/vim-coffee-script'

Plug 'xolox/vim-notes'

call plug#end()

if has('autocmd')
  filetype plugin indent on
endif
if has('syntax') && !exists('g:syntax_on')
  syntax enable
endif

" Colorscheme
set t_ut=
set background=dark
colorscheme molokai

set autoindent
set backspace=indent,eol,start
set complete-=i
set smarttab

set nrformats-=octal

set ttimeout
set ttimeoutlen=100

set incsearch

set laststatus=2
set ruler
set showcmd
set wildmenu

set display+=lastline

if &listchars ==# 'eol:$'
  set listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+
endif

if !exists('g:loaded_matchit') && findfile('plugin/matchit.vim', &rtp) ==# ''
  runtime! macros/matchit.vim
endif

set relativenumber
set number

set undofile
set undodir=~/.vim/undodir//
set history=1000
set backupdir=~/.vim/backupdir//
set directory=~/.vim/swapfiles//

set ts=2
set shiftwidth=2
set expandtab
set showmatch
set ignorecase
set hlsearch

set wildmode=list:longest,full

set scrolljump=5
set linebreak

set scrolloff=8
set sidescrolloff=15
set sidescroll=1

set encoding=utf-8
set fileencoding=utf-8

hi MatchParen ctermbg=0
hi MatchParen ctermfg=Red

" Map leader key to space
noremap <Space> <NOP>
let mapleader = " "

" Change tab
map ö :tabp <Enter>
map ä :tabn <Enter>

" Switch lines
map Ö :m .+1<CR>==
map Ä :m .-2<CR>==

" Move wrapped lines
nnoremap k gk
nnoremap j gj

" Disable Shift-k
nnoremap K <NOP>

" CTRL+Arrows to resize splits
nnoremap <C-left> :vertical resize -5<cr>
nnoremap <C-down> :resize +5<cr>
nnoremap <C-up> :resize -5<cr>
nnoremap <C-right> :vertical resize +5<cr>

" F4 to remove trailing whitespace
nnoremap <silent> <F4> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

command WQ wq
command Wq wq
command W w
command Q q

" Go to tag under cursor
noremap <leader>g <C-]>
" Show tags available for word under cursor
noremap <leader>f g]

let g:UltiSnipsExpandTrigger="<c-k>"
let g:UltiSnipsJumpForwardTrigger="<c-k>"
let g:UltiSnipsJumpBackwardTrigger="<s-c-j>"

" make YCM compatible with UltiSnips
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" Rspec
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

" Search buffers
map <Leader>b :CtrlPBuffer<cr>

" Increased ctrl matches
let g:ctrlp_match_window = 'results:30'

" Syntastic options
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" Highlight column 80
set colorcolumn=80
